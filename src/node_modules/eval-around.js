var _ = require("lodash");

module.exports = findMyBestPartAround;


//THTHTTTH
//TTTTTTHH
//TTTTHTHT




function findMyBestPartAround(input, rowIndex, colIndex) {
    var best = eval(input, {
            hnum: 0,
            size: 0,
            royal: false,
            data: [],
        }, rowIndex, colIndex
    );

    //console.error("best>>>" + JSON.stringify(best));
            return _.pick(best, ["top", "left", "right", "bottom"]);
}

/*input = {
 nrows: 3,
 ncols: 4,
 minHam: 2,
 maxSize: 4,
 pizza:
 }

 accu = {
 hnum,//number of h
 size, //size
 royal, //hnum === 3
 }*/

function eval(input, accu, rowIndex, colIndex) {
    if(accu.initCol === undefined) {
        accu.initCol = colIndex;
        accu.left = rowIndex;
        accu.top = colIndex;
    }

    if (rowIndex >= input.nrows || colIndex >= input.ncols) return accu;
    if (accu.hnum >= input.minHam || accu.maxSize >= input.maxSize) {
        return accu;
    }
    accu.data.push([rowIndex, colIndex]);
    accu.size += 1;
    if (input.pizza[rowIndex][colIndex]) {
        accu.hnum += 1;
        accu.royal = (accu.hnum === input.minHam);
    }

    //console.error(JSON.stringify(accu));
    if (accu.royal) {
        //console.error("found id !");
        accu.right = rowIndex;
        accu.bottom = colIndex;
        return accu;
    } else {
        //console.error("lancement ligne");
        var evalLigne = eval(input, _.cloneDeep(accu), rowIndex, colIndex + 1);
        //console.error("lancement colonne");
        //if(colIndex === accu.initCol) {
            var evalCol = eval(input, _.cloneDeep(accu), rowIndex + 1, accu.initCol);
        //}
        //var evalCarre = eval(input, _.cloneDeep(accu), rowIndex+1, colIndex+1);
    }
    var choosenOne = evalLigne;
    //console.error("compute>" + evalLigne.royal);
    if (evalLigne.royal && evalCol.royal) {
        if (evalLigne.size <= evalCol.size) {
            choosenOne = evalLigne;
        } else {
            choosenOne = evalCol;
        }
    } else if (evalLigne.royal) {
        choosenOne = evalLigne;
    } else if (evalCol.royal) {
        choosenOne = evalCol;
    }
    //console.error(JSON.stringify(choosenOne));
    return choosenOne;
}
