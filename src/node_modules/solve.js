"use strict";

var _ = require("lodash");
var parse = require("parse");
var unparse = require("unparse");

module.exports = _.flow(parse, solve, unparse);

function solve(problem) {
  var slicesPerRow = problem.ncols / problem.maxSize;
  return _(problem.pizza) // [[true, false, false], [false, true, false]]
    .map(_.partial(_.chunk, _, problem.maxSize)) // [[[true, false], [false]], [[false, true], [false]]]
    .flatten() // [[true, false], [false], [false, true], [false]]
    .map(_.compact) // [[true], [], [true], []]
    .map("length") // [1, 0, 1, 0]
    .map(function(nham, index) {
      return {x: (index % slicesPerRow) * problem.maxSize, y: Math.floor(index / slicesPerRow), nham: nham};
    })
    .tap(console.error.bind(console))
    .filter(function(slice) {
      return slice.nham >= 3;
    })
    .map(function(slice) {
      return {left: slice.x, right: slice.x + problem.maxSize - 1, top: slice.y, bottom: slice.y};
    })
    .tap(console.error.bind(console))
    .value();
}
